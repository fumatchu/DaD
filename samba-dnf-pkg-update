#!/bin/bash
#samba-dnf-pkg-update
user=$(whoami)
DNSSERVER=208.67.222.222
IP=$(hostname -I)
INTERFACE=$(nmcli | grep "connected to" | cut -c22-)
#Checking for user permissions
if [ "$user" != "root" ]; then
   echo ${red}"This program must be run as root ${textreset}"
   echo "Exiting"
   exit
else
   echo "Running Program"
fi
#In the event a samba update arrives from Rocky Linux, rebuild Samba packages
dnfremote=$(dnf provides samba | grep Provide | sed 's/.dc//' | sed '1d')
dnflocal=$(dnf provides samba | grep Provide | sed 's/.dc//' | sed '$d')
mocksmbver=$(dnf provides samba | grep samba | sed '2,4d' | cut -d: -f1 | cut -dx -f1)
majoros=$(cat /etc/redhat-release | grep -Eo "[0-9]" | sed '$d')
minoros=$(cat /etc/redhat-release | grep -Eo "[0-9]" | sed '1d')

cat <<EOF
This Utility is going to update your compiled Samba version to a newer version

The current local version on the system is:
$dnflocal

And the Version in the upstream repository is:
$dnfremote

This process will:
        -Remove local packages
        -Download the new samba source
        -Use mock to compile the source rpm
        -Recreate the repo in the same location
        -Run dnf update to the new version of Samba, with dependencies
EOF

while true; do

   read -p "Would you like to update the system now? (y/n) " yn

   case $yn in
   [yY])
      # delete all packages
      rm -rf /root/.samba/*.rpm
      # user external dns if AD broken
      nmcli con mod $INTERFACE ipv4.dns $DNSSERVER
      systemctl restart NetworkManager
      dnf download samba --source
      mock -r rocky-"$majoros"-x86_64 --enablerepo=devel --define 'dist .el'"$majoros"'_'"$minoros"'.dc' --with dc "$mocksmbver"src.rpm
      cp /var/lib/mock/rocky-"$majoros"-x86_64/result/*.rpm /root/.samba
      createrepo /root/.samba
      dnf -y update --nogpgcheck --repofrompath=samba,/root/.samba
      #Reset MTOD
      sed -i d /etc/motd
      #Set DNS back to AD 
      nmcli con mod $INTERFACE ipv4.dns $IP
      systemctl restart NetworkManager
      systemctl enable samba.service
      systemctl start samba.service
      

      break
      ;;
   [nN])
      echo exiting...
      exit
      ;;
   *) echo invalid response ;;
   esac

done
exit 1
